From: Timo Tijhof <krinklemail@gmail.com>
Date: Thu, 28 Aug 2014 23:08:38 +0200
Subject: Cloner: Implement cache-no-hardlinks argument

The cache directory is prefixing with 'file://' which forces in
git-clone to always copy files. This is intended for OpenStack usage.

By default, git has a feature to hardlink files if the source
and destination on the same disk. This saves space and speeds up
the cloning process.

This exposes that feature to users of zuul-cloner.

Change-Id: Ib8796f9dc5ccfeac4a3c9b3d30629c7db0f84739
---
 doc/source/cloner.rst |  5 +++++
 zuul/cmd/cloner.py    |  5 +++++
 3 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/doc/source/cloner.rst b/doc/source/cloner.rst
index 70577cc..c0ca990 100644
--- a/doc/source/cloner.rst
+++ b/doc/source/cloner.rst
@@ -108,3 +108,8 @@ repository has all the information in the upstream repository.
 The default for ``--cache-dir`` is taken from the environment variable
 ``ZUUL_CACHE_DIR``. A value provided explicitly on the command line
 overrides the environment variable setting.
+
+The ``--cache-no-hardlinks`` option can be used to force git to
+always copy git objects from the cache directory. By default, if
+the cache directory is on the same disk as the workspace, git-clone
+will hardlink git objects to speed up the process and save space.
diff --git a/zuul/cmd/cloner.py b/zuul/cmd/cloner.py
index dbbe396..0d045be 100755
--- a/zuul/cmd/cloner.py
+++ b/zuul/cmd/cloner.py
@@ -59,6 +59,10 @@ class Cloner(zuul.cmd.ZuulApp):
                                   'Can also be set via ZUUL_CACHE_DIR '
                                   'environment variable.'
                                   ))
+        parser.add_argument('--cache-no-hardlinks', dest='cache_no_hardlinks',
+                            action='store_true',
+                            help=('force git-clone to never use hardlinks when'
+                                  'fetching from the cache directory.'))
         parser.add_argument('git_base_url',
                             help='reference repo to clone from')
         parser.add_argument('projects', nargs='+',
@@ -153,6 +157,7 @@ class Cloner(zuul.cmd.ZuulApp):
             cache_dir=self.args.cache_dir,
             zuul_newrev=self.args.zuul_newrev,
             zuul_project=self.args.zuul_project,
+            cache_no_hardlinks=self.args.cache_no_hardlinks,
         )
         cloner.execute()
 
