From: Kunal Mehta <legoktm@member.fsf.org>
Date: Fri, 26 Aug 2016 15:15:15 -0700
Subject: Don't merge queues if the common job is 'noop'

For queues that use the DependentPipelineManager, if the common job is
simply 'noop', then it should not merged.

Signed-off-by: Antoine Musso <hashar@free.fr>
Change-Id: I15969be180140db472b6c0a00dad0084c81d6a43
---
 tests/fixtures/layout-noop-queues.yaml | 20 ++++++++++++++++++++
 tests/test_scheduler.py                |  6 ++++++
 zuul/scheduler.py                      |  7 ++++++-
 3 files changed, 32 insertions(+), 1 deletion(-)
 create mode 100644 tests/fixtures/layout-noop-queues.yaml

diff --git a/tests/fixtures/layout-noop-queues.yaml b/tests/fixtures/layout-noop-queues.yaml
new file mode 100644
index 0000000..84efc2d
--- /dev/null
+++ b/tests/fixtures/layout-noop-queues.yaml
@@ -0,0 +1,20 @@
+pipelines:
+  - name: gate
+    manager: DependentPipelineManager
+    precedence: low
+    trigger:
+      gerrit:
+        - event: comment-added
+          approval:
+            - approved: 1
+
+projects:
+  - name: projectA
+    gate:
+      - test-only-a
+      - noop
+
+  - name: projectB
+    gate:
+      - test-only-b
+      - noop
diff --git a/tests/test_scheduler.py b/tests/test_scheduler.py
index 335f987..6c05b51 100755
--- a/tests/test_scheduler.py
+++ b/tests/test_scheduler.py
@@ -2330,6 +2330,12 @@ jobs:
         self.sched.reconfigure(self.config)
         self.assertEqual(len(self.sched.layout.pipelines['gate'].queues), 1)
 
+    def test_noop_job_does_not_merge_queues(self):
+        self.config.set('zuul', 'layout_config',
+                        'tests/fixtures/layout-noop-queues.yaml')
+        self.sched.reconfigure(self.config)
+        self.assertEqual(len(self.sched.layout.pipelines['gate'].queues), 2)
+
     def test_mutex(self):
         "Test job mutexes"
         self.config.set('zuul', 'layout_config',
diff --git a/zuul/scheduler.py b/zuul/scheduler.py
index b52931e..4dd5cda 100644
--- a/zuul/scheduler.py
+++ b/zuul/scheduler.py
@@ -2056,7 +2056,12 @@ class DependentPipelineManager(BasePipelineManager):
         for a in change_queues:
             merged_a = False
             for b in new_change_queues:
-                if not a.getJobs().isdisjoint(b.getJobs()):
+                intersection = a.getJobs().intersection(b.getJobs())
+                # Queues are combined if they have intersecting jobs
+                # But don't count the special 'noop' job.
+                intersection = {j for j in intersection
+                                if j.name != 'noop'}
+                if intersection:
                     self.log.debug("Merging queue %s into %s" % (a, b))
                     b.mergeChangeQueue(a)
                     merged_a = True
